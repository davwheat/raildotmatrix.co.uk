.dot-matrix {
  @keyframes info-in {
    0% {
      opacity: 1;
      transform: translateY(110%);
    }

    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes info-out {
    0% {
      opacity: 1;
      transform: translateY(0);
    }

    100% {
      opacity: 0;
      transform: translateY(0);
    }
  }

  .trainServiceAdditional {
    margin-top: 12px;
    position: relative;
    height: 1em;

    // No overflow
    clip-path: inset(0);

    > * {
      position: absolute;
      height: 1em;
      display: flex;
      top: 0;
      left: 0;
      right: 0;

      opacity: 0;
      transition: opacity 0.2s linear 0.5s;

      &.shown {
        opacity: 1;
      }

      &:not(.shown) {
        transition-delay: 0s;
      }
    }

    .info {
      &.shown {
        // Initial state
        opacity: 1;
        transform: translateY(110%);

        animation: info-in 0.2s linear forwards;
        animation-fill-mode: forwards;
        animation-delay: 0.5s;
      }

      &:not(.shown) {
        // transition-delay: 0s;
        animation: info-out 0.2s linear forwards;
        animation-fill-mode: forwards;
      }
    }

    .callingAt {
      width: calc(var(--ordinal-width) + var(--std-width) + var(--gap) * 2);
      flex-shrink: 0;

      // Handle pluralisation in CSS to make the JS simpler
      &Point {
        &:not(:nth-last-child(2)):not(:last-child)::after {
          content: ', ';
        }

        &:nth-last-child(2)::after {
          content: ' and ';
        }

        // Only one calling point
        &:first-child:last-child::after {
          content: ' only.';
        }

        &:not(:first-child):last-child::after {
          content: '.';
        }
      }
    }
  }
}
